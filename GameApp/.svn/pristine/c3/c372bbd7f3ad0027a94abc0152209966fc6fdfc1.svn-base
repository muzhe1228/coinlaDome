{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\crypto-js/assets\\script\\crypto-js\\enc-utf16.js"],"names":["root","factory","exports","module","require","define","amd","CryptoJS","C","C_lib","lib","WordArray","C_enc","enc","Utf16BE","Utf16","stringify","wordArray","words","sigBytes","utf16Chars","i","codePoint","push","String","fromCharCode","join","parse","utf16Str","utf16StrLength","length","charCodeAt","create","Utf16LE","swapEndian","word"],"mappings":"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","file":"enc-utf16.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\crypto-js","sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));"]}