{"version":3,"sources":["assets/script/event-listener.js","assets/script/game-controller.js","assets/script/global.js","assets/script/main-world.js","assets/script/main.js","assets/script/xiazhu.js"],"names":["EventListener","obj","Register","on","name","method","hasOwnProperty","push","fire","handlerList","i","length","handler","args","j","arguments","apply","this","off","splice","destroy","exports","default","_global","require","_eventListener","cc","Class","extends","Component","properties","MainWorld","onLoad","_global2","eventlistener","_eventListener2","Login","uid","log","start","global","xiazhuPrefab","type","Prefab","xiazhu","instantiate","parent","node","mainPrefab","mainWorld","buttonClick","event","constomData","alert"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,IAAAA,gBAAA,SAAAA,cAAAC;MACE,IAAAC;MACAD,IAAAE,KAAA,SAAAC,MAAAC;QACEH,SAAAI,eAAAF,UACEF,SAAAE;QAEFF,SAAAE,MAAAG,KAAAF;;MAEFJ,IAAAO,OAAA,SAAAJ;QACE,IAAAF,SAAAI,eAAAF,OAAA;UACE,IAAAK,cAAAP,SAAAE;UACA,KAAA,IAAAM,IAAA,GAAAA,IAAAD,YAAAE,QAAAD,KAAA;YACE,IAAAE,UAAAH,YAAAC;YACA,IAAAG;YACA,KAAA,IAAAC,IAAA,GAAAA,IAAAC,UAAAJ,QAAAG,KACED,KAAAN,KAAAQ,UAAAD;YAEFF,QAAAI,MAAAC,MAAAJ;;;;MAKNZ,IAAAiB,MAAA,SAAAd,MAAAC;QACE,IAAAH,SAAAI,eAAAF,OAAA;UACE,IAAAK,cAAAP,SAAAE;UACA,KAAA,IAAAM,IAAA,GAAAA,IAAAD,YAAAE,QAAAD,KACED,YAAAC,OAAAL,UACEI,YAAAU,OAAAT,GAAA;;;MAKRT,IAAAmB,UAAA;QACElB;;MAEF,OAAAD;;IAEaoB,QAAAC,UAAAtB;;;;;;;;ICnCf,IAAAuB,UAAAC,QAAA;;IACA,IAAAC,iBAAAD,QAAA;;;;;;;IACAE,GAAAC;MACEC,SAAAF,GAAAG;MAEAC;QACEC;;MAOFC,QAAA,SAAAA;QACEC,SAAAX,QAAAY,iBAAA,GAAAC,gBAAAb;QAEAW,SAAAX,QAAAY,cAAA/B,GAAA,SAAAc,KAAAmB;;MAEFA,OAAA,SAAAA,MAAAC;QACEX,GAAAY,IAAA,oBAAAD;;MAEFE,OAAA,SAAAA;;;;;;;;;;;;;;ICvBF,IAAAC;IAEenB,QAAAC,UAAAkB;;;;;;;;ICDf,IAAAjB,UAAAC,QAAA;;;;;;;IACAE,GAAAC;MACEC,SAAAF,GAAAG;MAEAC;QACEW;UACEnB,SAAA;UACAoB,MAAAhB,GAAAiB;;;MAMJX,QAAA,SAAAA;QACE,IAAAY,SAAAlB,GAAAmB,YAAA5B,KAAAwB;QACAG,OAAAE,SAAA7B,KAAA8B;;;;;;;;;;;ICNJrB,GAAAC;MACEC,SAAAF,GAAAG;MAEAC;QACEkB;UACE1B;UACAoB,MAAAhB,GAAAiB;;;MAMJX,QAAA,SAAAA;QACE,IAAAiB,YAAAvB,GAAAmB,YAAA5B,KAAA+B,WAAA;QACAC,UAAAH,SAAA7B,KAAA8B;;MAGFR,OAAA,SAAAA;;;;;;;;IC3BF,IAAAhB,UAAAC,QAAA;;;;;;;IACAE,GAAAC;MACEC,SAAAF,GAAAG;MAEAC;MAsBAS,OAAA,SAAAA;MACAW,aAAA,SAAAA,YAAAC,OAAAC;QACE1B,GAAAY,IAAAc;QACAnB,SAAAX,QAAAY,cAAA1B,KAAA,SAAA;QACAkB,GAAAY,IAAA;QACAe,MAAA","sourcesContent":["const EventListener = function(obj) {\r\n  let Register = {};\r\n  obj.on = function(name, method) {\r\n    if (!Register.hasOwnProperty(name)) {\r\n      Register[name] = [];\r\n    }\r\n    Register[name].push(method);\r\n  };\r\n  obj.fire = function(name) {\r\n    if (Register.hasOwnProperty(name)) {\r\n      var handlerList = Register[name];\r\n      for (let i = 0; i < handlerList.length; i++) {\r\n        let handler = handlerList[i];\r\n        let args = [];\r\n        for (let j = 1; j < arguments.length; j++) {\r\n          args.push(arguments[j]);\r\n        }\r\n        handler.apply(this, args);\r\n        // console.log(\"args = \" + JSON.stringify(args));\r\n      }\r\n    }\r\n  };\r\n  obj.off = function(name, method) {\r\n    if (Register.hasOwnProperty(name)) {\r\n      var handlerList = Register[name];\r\n      for (var i = 0; i < handlerList.length; i++) {\r\n        if (handlerList[i] === method) {\r\n          handlerList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  obj.destroy = function() {\r\n    Register = {};\r\n  };\r\n  return obj;\r\n};\r\nexport default EventListener;\r\n","// const EventListener = require(\"./event-listener\");\r\n// const global = require(\"./global\");\r\nimport global from \"./global\";\r\nimport EventListener from \"./event-listener\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    MainWorld:{\r\n      \r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    global.eventlistener = EventListener({});\r\n\r\n    global.eventlistener.on(\"login\", this.Login);\r\n  },\r\n  Login(uid) {\r\n    cc.log(\"button click = \" + uid);\r\n  },\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","const global = {};\r\n\r\nexport default global;\r\n","// const global = require(\"./global\");\r\nimport global from './global'\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    xiazhuPrefab: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad () {\r\n    let xiazhu = cc.instantiate(this.xiazhuPrefab);\r\n    xiazhu.parent = this.node;\r\n  },\r\n\r\n  // start() {},\r\n \r\n  // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    mainPrefab: {\r\n      default: [],\r\n      type: cc.Prefab\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    let mainWorld = cc.instantiate(this.mainPrefab[0]);\r\n    mainWorld.parent = this.node;\r\n  },\r\n\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","import global from './global'\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // foo: {\r\n    //     // ATTRIBUTES:\r\n    //     default: null,        // The default value will be used only when the component attaching\r\n    //                           // to a node for the first time\r\n    //     type: cc.SpriteFrame, // optional, default is typeof default\r\n    //     serializable: true,   // optional, default is true\r\n    // },\r\n    // bar: {\r\n    //     get () {\r\n    //         return this._bar;\r\n    //     },\r\n    //     set (value) {\r\n    //         this._bar = value;\r\n    //     }\r\n    // },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  // onLoad () {},\r\n\r\n  start() {},\r\n  buttonClick(event, constomData) {\r\n    cc.log(constomData);\r\n    global.eventlistener.fire(\"login\", \"下注111111\");\r\n    cc.log(\"yes\");\r\n    alert('111')\r\n  }\r\n  // update (dt) {},\r\n});\r\n"],"sourceRoot":"/source/","file":"project.dev.js"}