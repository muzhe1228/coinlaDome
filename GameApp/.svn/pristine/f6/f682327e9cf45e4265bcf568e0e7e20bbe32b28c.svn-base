{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\crypto-js/assets\\script\\crypto-js\\lib-typedarrays.js"],"names":["root","factory","exports","module","require","define","amd","CryptoJS","ArrayBuffer","C","C_lib","lib","WordArray","superInit","init","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","words","i","call","apply","arguments","prototype"],"mappings":";;;;;;;;AAAA,CAAE,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AAC1B,KAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;AAChC;AACAC,SAAOD,OAAP,GAAiBA,UAAUD,QAAQG,QAAQ,QAAR,CAAR,CAA3B;AACA,EAHD,MAIK,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAA3C,EAAgD;AACpD;AACAD,SAAO,CAAC,QAAD,CAAP,EAAmBJ,OAAnB;AACA,EAHI,MAIA;AACJ;AACAA,UAAQD,KAAKO,QAAb;AACA;AACD,CAbC,aAaM,UAAUA,QAAV,EAAoB;;AAE1B,cAAY;AACT;AACA,MAAI,OAAOC,WAAP,IAAsB,UAA1B,EAAsC;AAClC;AACH;;AAED;AACA,MAAIC,IAAIF,QAAR;AACA,MAAIG,QAAQD,EAAEE,GAAd;AACA,MAAIC,YAAYF,MAAME,SAAtB;;AAEA;AACA,MAAIC,YAAYD,UAAUE,IAA1B;;AAEA;AACA,MAAIC,UAAUH,UAAUE,IAAV,GAAiB,UAAUE,UAAV,EAAsB;AACjD;AACA,OAAIA,sBAAsBR,WAA1B,EAAuC;AACnCQ,iBAAa,IAAIC,UAAJ,CAAeD,UAAf,CAAb;AACH;;AAED;AACA,OACIA,sBAAsBE,SAAtB,IACC,OAAOC,iBAAP,KAA6B,WAA7B,IAA4CH,sBAAsBG,iBADnE,IAEAH,sBAAsBI,UAFtB,IAGAJ,sBAAsBK,WAHtB,IAIAL,sBAAsBM,UAJtB,IAKAN,sBAAsBO,WALtB,IAMAP,sBAAsBQ,YANtB,IAOAR,sBAAsBS,YAR1B,EASE;AACET,iBAAa,IAAIC,UAAJ,CAAeD,WAAWU,MAA1B,EAAkCV,WAAWW,UAA7C,EAAyDX,WAAWY,UAApE,CAAb;AACH;;AAED;AACA,OAAIZ,sBAAsBC,UAA1B,EAAsC;AAClC;AACA,QAAIY,uBAAuBb,WAAWY,UAAtC;;AAEA;AACA,QAAIE,QAAQ,EAAZ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,oBAApB,EAA0CE,GAA1C,EAA+C;AAC3CD,WAAMC,MAAM,CAAZ,KAAkBf,WAAWe,CAAX,KAAkB,KAAMA,IAAI,CAAL,GAAU,CAAnD;AACH;;AAED;AACAlB,cAAUmB,IAAV,CAAe,IAAf,EAAqBF,KAArB,EAA4BD,oBAA5B;AACH,IAZD,MAYO;AACH;AACAhB,cAAUoB,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB;AACH;AACJ,GArCD;;AAuCAnB,UAAQoB,SAAR,GAAoBvB,SAApB;AACH,EAvDA,GAAD;;AA0DA,QAAOL,SAASI,GAAT,CAAaC,SAApB;AAEA,CA3EC,CAAD","file":"lib-typedarrays.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\crypto-js","sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));"]}