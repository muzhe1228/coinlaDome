{"version":3,"sources":["rc4.js"],"names":["root","factory","undef","exports","module","require","define","amd","CryptoJS","C","C_lib","lib","StreamCipher","C_algo","algo","RC4","extend","_doReset","key","_key","keyWords","words","keySigBytes","sigBytes","S","_S","i","j","keyByteIndex","keyByte","t","_i","_j","_doProcessBlock","M","offset","generateKeystreamWord","call","keySize","ivSize","keystreamWord","n","_createHelper","RC4Drop","cfg","drop"],"mappings":"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","file":"rc4.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\crypto-js","sourcesContent":[";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));"]}